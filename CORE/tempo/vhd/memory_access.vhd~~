library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;

library LIB_CORE;
use LIB_CORE.RISCV_CORE_CONFIG.all;

entity memory_access is port (					i_rstn		: in std_logic;
								i_clk		: in std_logic;
								i_pc		: in std_logic_vector(c_NBITS - 1 downto 0);
								i_address	: in std_logic_vector(c_NBITS - 1 downto 0);
								i_rd		: in std_logic_vector(c_NBITS - 1 downto 0);
								i_validity_ftch	: in std_logic;
								i_validity_wbck	: in std_logic;	
								o_address	: out std_logic_vector(c_NBITS - 1 downto 0);
								o_pc		: out std_logic_vector(c_NBITS - 1 downto 0);
								o_inst		: out std_logic_vector(c_NBITS - 1 downto 0));

end memory_access;

architecture memory_access_arch of memory_access is 

	begin
		o_address <= s_pc;

			comb1 : process(i_clk, i_pc, i_inst, s_validity_inputs, i_rs1, i_rs2)
			begin
					case i_inst(6 downto 0) is
						when c_OPCODE32_LUI | c_OPCODE32_AUIPC =>					-- U-type Format
										s_rs1select <= "00000";
										s_rs2select <= "00000";
										s_rdselect <= i_inst(11 downto 7);
										s_validity_global <= s_validity_inputs;
						when c_OPCODE32_OP_IMM =>									-- I-type Format
										s_rs1select <= i_inst(19 downto 15);
										s_rs2select <= "00000";
										s_rdselect <= i_inst(11 downto 7);
										s_validity_global <= s_validity_inputs;		
						when c_OPCODE32_OP =>										-- R-type Format
										s_rs1select <= i_inst(19 downto 15);
										s_rs2select <= i_inst(24 downto 20);
										s_rdselect <= i_inst(11 downto 7);
										s_validity_global <= s_validity_inputs;
						when others => 
										s_rs1select <= "00000";
										s_rs2select <= "00000";
										s_rdselect <= "00000";
										s_validity_global <= '0';
					end case;

		seq : process (i_clk, i_rstn)
			begin
				if (i_rstn = '0') then
					o_pc <= (others => '0');
					o_inst <= (others => '0');
				elsif (i_clk'event and i_clk = '1') then
					o_pc <= s_pc;
					o_inst <= s_data;
				end if;
		end process seq;
end memory_access_arch;
